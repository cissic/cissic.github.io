#+TITLE: How to tailor the output of org-mode exporter to our needs
#+DESCRIPTION: 
#+AUTHOR: cissic
#+DATE: <2022-11-10 Thu>
#+TAGS: org-mode export-settings
#+OPTIONS: toc:nil

#+OPTIONS: -:nil

** Problem
The problem appeared in a recent document. I used to use ~pandoc~ in order to 
transform an .org file into github flavoured .md, i.e when doing
#+begin_src 
pandoc -s -t markdown file.org -o file.md
#+end_src
I can obtain content in markdown which includes the header that looks more or less like this:

#+begin_src 
---
author:
- cissic
date: '\<2022-11-10 Thu\>'
tags: 'org-mode export-settings'
title: 'How to tailor the output of org-mode exporter to our needs'
---
#+end_src

This header is important, especially the 'tags' part, because basing on this my template assigns
tags to the post.

Everything worked fine until I decided to use a more sophisticated syntax for source parts of 
the text in my recent post. Namely I wrote:

#+begin_src 
#+begin_src org :tangle (concat (org-entry-get nil "PRJ-DIR" t) "main-book.org") :mkdirp yes
#+end_src

This is too much for ~pandoc~ converter. An org file with such lines was all messed up.
I decided to use standard emacs exporter (~C-c C-e m m~), however when using it we need 
to instruct it to add special markdown header mentioned above. How can we do this?

** Solution
The solution can be found [[https://emacs.stackexchange.com/questions/74505/how-can-i-add-specific-text-to-the-content-generated-by-org-mode-export-to-mark#74513][here]].
We need to add 
#+begin_src 
#+OPTIONS: -:nil
#+end_src
to the keywords at the start of the org-file in order to disable special treatment of minus sign during the export (This is described [[https://orgmode.org/org.html#FOOT109][here]].

Additionally we need to add the following to ~init.el~:
#+begin_src 
(defun org-export-md-format-front-matter ()
  (let* ((kv-alist (org-element-map (org-element-parse-buffer 'greater-element)
                       'keyword
                     (lambda (keyword)
                       (cons (intern (downcase (org-element-property :key keyword)))
                             (org-element-property :value keyword)))))
         (lines (mapcar (lambda (kw)
                          (let ((val (alist-get kw kv-alist)))
                            (format (pcase kw
                                      ('author "%s: %s")
                                      ((or 'tags 'title) "%s: '%s'")
                                      (_ "%s: %s"))
                                    (downcase (symbol-name kw))
                                    (pcase kw
                                      ('date (substring val 1 -1))
                                      (_ val)))))
                        '(author date tags title))))
    (concat "---\n" (concat (mapconcat #'identity lines "\n")) "\n---")))

(defun my/org-export-markdown-hook-function (backend)
    (if (eq backend 'md)
        (insert (org-export-md-format-front-matter) "\n")))

(add-hook 'org-export-before-processing-hook #'my/org-export-markdown-hook-function)
#+end_src

Now, the file generated when exporting from .org to .md contains desired data.



** Helpful Links:
- How to force newline inside macro: https://stackoverflow.com/questions/22132603/define-org-mode-macro-with-line-breaks
