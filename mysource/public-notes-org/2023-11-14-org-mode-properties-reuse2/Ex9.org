#+INCLUDE: ./mymacros.org

* Section about src_elisp{(org-entry-get nil "Name")} from {{{town}}} :this:
:PROPERTIES:
:Name:     J.S. Bach
:END:

* Section about src_elisp{(org-entry-get nil "Composer")} and {{{mymacro}}} :this:
:PROPERTIES:
:Composer:     W.A. Mozart
:END:


* Code
#+begin_src elisp :eval yes :results output :exports both

    (defun replace-in-string (what with in)
      (replace-regexp-in-string (regexp-quote what) with in nil 'literal))

    (defun remove-text-up-to-asterisk (text)
      "Remove text from the beginning of the line to the first asterisk."
      (when (string-match "\\*" text)
	(setq text (substring text (match-end 0))))
      text)

    (defun level1-headlines-filter ()
      (let (headline props)
	(setq headline (org-entry-get nil "ITEM"))
	(setq props (org-get-entry))
	(setq string 
	      (string-trim ;replace-in-string "\n" "" 
		;(replace-in-string "* " "" 
                (remove-text-up-to-asterisk
                (replace-in-string "=" "" 
		(org-export-string-as 
		  (concat "#+INCLUDE: mymacros.org" "\n" 
			  "* " headline "\n" props) 
		  'org t '(:with-toc nil)))))) ;)
	 ))

      (setq HEADLINES-PARSED (org-map-entries #'level1-headlines-filter "LEVEL=1+this") )

      (print HEADLINES-PARSED)

#+end_src
