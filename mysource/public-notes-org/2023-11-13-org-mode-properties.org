#+TITLE: Properties in org-mode
#+DESCRIPTION: 
#+AUTHOR: cissic
#+DATE: <2023-11-13 Mon>
#+TAGS: kde kde-activity windows-manager
# #+OPTIONS: toc:nil
#+OPTIONS: -:nil


* TODO {{{title}}}
:PROPERTIES:
:PRJ-DIR: ./2023-11-13-org-mode-properties/
:END:

** {{{title}}}

*** Problem - the beggining
Let's say we've got the following org file

#+begin_src org :tangle (concat (org-entry-get nil "PRJ-DIR" t) "Ex1.org") :mkdirp yes :exports both
  ,* Headline 1 with name taken from properties - src_elisp{(org-entry-get nil "Name")}
  :PROPERTIES:
  :Title:     Goldberg Variations
  :Name:  J.S. Bach
  :END:
      
  ,** SubHeadline 
#+end_src

Since properties are not inherited by default
we cannot add =src_elisp{(org-entry-get nil "Name")}= in the subheadline,
because it ends with an error.

But we can turn the properties inheritance on like below (Do observe
the usage of ='selective= flag - without it the example wouldn't work!):

#+begin_src org :tangle (concat (org-entry-get nil "PRJ-DIR" t) "Ex2.org") :mkdirp yes :exports both
  # -*- mode: Org; org-use-property-inheritance: t -*- 
  ,* Headline 1 with name taken from properties - src_elisp{(org-entry-get nil "Name")}
  :PROPERTIES:
  :Title:     Goldberg Variations
  :Name:  J.S. Bach
  :END:

  ,** SubHeadline  - src_elisp{(org-entry-get nil "Name" 'selective)}
#+end_src

**** How to selectively inherit properties?
- See here: https://emacs.stackexchange.com/questions/62423/forcing-inheritance-of-specific-properties-in-orgmode


*** Problem extension
Now we would like to keep properties in a different files and
treat it as some kind of database

#+begin_src text :tangle (concat (org-entry-get nil "PRJ-DIR" t) "properties.txt") :mkdirp yes :exports both
  :PROPERTIES:
  :Title: Some New Title
  :Name:  Newman
  :END:
#+end_src 

#+begin_src text :tangle (concat (org-entry-get nil "PRJ-DIR" t) "properties2.txt") :mkdirp yes :exports both
  :PROPERTIES:
  :Title: Title22222
  :Name:  Name22222
  :END:
#+end_src 


**** Approach 1
<<Approach1>>
This won't work:
#+begin_src org :tangle (concat (org-entry-get nil "PRJ-DIR" t) "Ex3.org") :mkdirp yes :exports both
  # -*- mode: Org; org-use-property-inheritance: t -*- 
  ,* Headline 1 with name taken from properties - src_elisp{(org-entry-get nil "Name")}
  #+INCLUDE: ./properties.txt

  ,** SubHeadline  - src_elisp{(org-entry-get nil "Name" 'selective)}
#+end_src

**** Approach 2
This does work but it's less convenient:
#+begin_src org :tangle (concat (org-entry-get nil "PRJ-DIR" t) "Ex4.org") :mkdirp yes :exports both
  # -*- mode: Org; org-use-property-inheritance: t -*- 
  ,* Headline 1 with name taken from properties - src_elisp{(org-entry-get nil "Name")}
  ,#+INCLUDE: ./properties.txt

  ,** SubHeadline  - src_elisp{(org-entry-get nil "Name" 'selective)}
  #+INCLUDE: ./properties.txt
#+end_src


** Solution
It seems that [[Approach 1]] does not work because Subheadline has no content.
If we add any latex white space or subsubheadline inside subheadline
everything works ok.

**** Approach 4 
This does work but it's less convenient:
#+begin_src org :tangle (concat (org-entry-get nil "PRJ-DIR" t) "Ex5.org") :mkdirp yes :exports both
  ,# -*- mode: Org; org-use-property-inheritance: t -*- 
  ,* Headline 1 with name taken from properties - src_elisp{(org-entry-get nil "Name")}
  ,#+INCLUDE: ./properties.txt

  ,** SubHeadline  - src_elisp{(org-entry-get nil "Name" 'selective)}
  \nbsp{}

  # # The lines below wouldn't work
  #** SubHeadline  - src_elisp{(org-entry-get nil "Name" 'selective)}
  #** SubHeadline  
#+end_src






** Useful links:


* COMMENT Local Variables

# Local Variables:
# eval: (setq org-latex-pdf-process
#  '("pdflatex -shell-escape -synctex=1 -interaction=nonstopmode -output-directory %o %f"
#    "pdflatex -shell-escape -synctex=1 -interaction=nonstopmode -output-directory %o %f"
#    "pdflatex -shell-escape -synctex=1 -interaction=nonstopmode -output-directory %o %f"))
# End:
 
