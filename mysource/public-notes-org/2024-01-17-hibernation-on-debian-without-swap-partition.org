#+TITLE: Hibernation on Debian without swap partition
#+DESCRIPTION: 
#+AUTHOR: cissic
#+DATE: <2024-01-17 Wed>
#+TAGS: org-mode markup zero-width-space
# #+OPTIONS: toc:nil
#+OPTIONS: -:nil


* TODO {{{title}}}
:PROPERTIES:
:PRJ-DIR: ./2024-01-17-hibernation/
:END:


** Enabling hibernation on Debian (bookworm-testing-trixie)
I followed the instruction found here:
https://wiki.debian.org/Hibernation/Hibernate_Without_Swap_Partition

*** Create swapfile and configure it

#+begin_src sh
  fallocate -l 64GiB /media/mb/arch/swapfile
#+end_src

#+begin_src sh
  mkswap /media/mb/arch/swapfile
  chmod 600 /media/mb/arch/swapfile
#+end_src

#+RESULTS: 
: sudo mkswap /media/mb/arch/swapfile
: [sudo] hasło użytkownika mb: 
: mkswap: /media/mb/arch/swapfile: niebezpieczne uprawnienia 0644, należy poprawić przez: chmod 0600 /media/mb/arch/swapfile
: mkswap: /media/mb/arch/swapfile: niebezpieczny właściciel pliku 1000, należy poprawić przez: chown 0:0 /media/mb/arch/swapfile
: Tworzenie obszaru wymiany w wersji 1, rozmiar = 64 GiB (bajtów: 68719472640)
: brak etykiety, UUID=bee83b7a-bce1-413b-b51f-7e23b2e7ea06


#+begin_src sh
  sudo chmod 600 /media/mb/arch/swapfile
#+end_src


Then I added:
#+begin_example
/media/mb/arch/swapfile   swap    swap    defaults        0       0 
#+end_example

to my =/etc/fstab=.

Then I stopped the kernel from using the swap file for swapping:

#+begin_src sh
  sudo sysctl -w vm.swappiness=1 
#+end_src


Activated the swap file:
#+begin_src sh
  sudo swapon /media/mb/arch/swapfile
#+end_src

#+RESULTS: 
: swapon: /media/mb/arch/swapfile: niebezpieczny właściciel pliku 1000, sugerowany 0 (root).

*** Update grub and initramfs
**** get UUID of the partition storing swapfile

#+begin_src sh
  findmnt /media/mb/arch -o UUID -n
#+end_src

#+RESULTS:
: b3dd82eb-4174-4ba5-a557-8972bafc04ba

**** ... and offset of the file 
#+begin_src sh
  sudo filefrag -v /media/mb/arch/swapfile|awk 'NR==4{gsub(/\./,"");print $4;}'
#+end_src

#+RESULTS:
: 135047168


**** now put those in =/etc/default/grub=

#+begin_example
GRUB_CMDLINE_LINUX_DEFAULT="resume=UUID=xxxx resume_offset=yyyyy"
#+end_example

which in my case was:
#+begin_example
GRUB_CMDLINE_LINUX_DEFAULT="resume=UUID=b3dd82eb-4174-4ba5-a557-8972bafc04ba resume_offset=135047168"
#+end_example


**** put UUID in =/etc/initramfs-tools/conf.d/resume=
Append line
#+begin_example
RESUME=UUID=b3dd82eb-4174-4ba5-a557-8972bafc04ba
#+end_example




**** regenerate both grub config and initramfs

#+begin_src sh
  sudo update-grub
  sudo update-initramfs -k all -u
#+end_src

*** Test hibernation straight away
#+begin_src sh
  systemctl hibernate
#+end_src


... it's working!




** Enabling =suspend-then-hibernate=
I followed the instructions here:
https://wiki.debian.org/SystemdSuspendSedation

*** Create the file =/etc/systemd/system/suspend-sedation.service=
with the following content (I did extended the suspend-time from 5 minutes (300) to
30 minutes (1800 in line ~Environment="ALARM_SEC=1800"~):

3600 = 1h
7200 = 2h

#+begin_src sh :tangle /tmp/suspend-sedation.service-FIRST-VERSION
  # ## MB note: 
  # ## file created in order to enable suspend-then-hibernate
  # ## according to https://wiki.debian.org/SystemdSuspendSedation

  # /etc/systemd/system/suspend-sedation.service
  [Unit]
  Description=Hibernate after suspend
  Documentation=https://bbs.archlinux.org/viewtopic.php?pid=1420279#p1420279
  Documentation=https://bbs.archlinux.org/viewtopic.php?pid=1574125#p1574125
  Documentation=https://wiki.archlinux.org/index.php/Power_management
  Documentation=http://forums.debian.net/viewtopic.php?f=5&t=129088
  Documentation=https://wiki.debian.org/SystemdSuspendSedation
  Conflicts=hibernate.target hybrid-sleep.target
  Before=sleep.target
  StopWhenUnneeded=true

  [Service]
  Type=oneshot
  RemainAfterExit=yes
  # 1800"
  Environment="ALARM_SEC=1800" 
  Environment="WAKEALARM=/sys/class/rtc/rtc0/wakealarm"

  ExecStart=/usr/sbin/rtcwake --seconds $ALARM_SEC --auto --mode no
  ExecStop=/bin/sh -c '\
  ALARM=$(cat $WAKEALARM); \
  NOW=$(date +%%s); \
  if [ -z "$ALARM" ] || [ "$NOW" -ge "$ALARM" ]; then \

    if [ $(cat /sys/class/power_supply/AC/online) == '0' ]; then
      echo 'On battery'
    
      if [ $(cat /sys/class/power_supply/BAT0/capacity) -lt 50 ]; then      
	echo 'Battery less than 50%'
	# perform hibernation
	echo "suspend-sedation: Woke up - no alarm set. Hibernating..."; \
	systemctl hibernate; \
      else
	# put it to sleep once again
	systemctl suspend; \      
      fi
    
    else
      echo 'On AC power'
      systemctl suspend; \
    fi   
  
  else \
    echo "suspend-sedation: Woke up before alarm - normal wakeup."; \
    /usr/sbin/rtcwake --auto --mode disable; \
  fi \
  '

  [Install]
  WantedBy=sleep.target
#+end_src




**** New version that performs hibernation from suspension only if laptop is *not* on battery and has less than 50% of battery

Basing on this:
https://askubuntu.com/questions/75886/how-do-i-set-the-computer-to-suspend-when-battery-is-critically-low

#+begin_src sh :tangle /tmp/suspend-sedation.service
# ## MB note: 
# ## file created in order to enable suspend-then-hibernate
# ## according to https://wiki.debian.org/SystemdSuspendSedation

# /etc/systemd/system/suspend-sedation.service
[Unit]
Description=Hibernate after suspend
Documentation=https://bbs.archlinux.org/viewtopic.php?pid=1420279#p1420279
Documentation=https://bbs.archlinux.org/viewtopic.php?pid=1574125#p1574125
Documentation=https://wiki.archlinux.org/index.php/Power_management
Documentation=http://forums.debian.net/viewtopic.php?f=5&t=129088
Documentation=https://wiki.debian.org/SystemdSuspendSedation
Conflicts=hibernate.target hybrid-sleep.target
Before=sleep.target
StopWhenUnneeded=true

[Service]
Type=oneshot
RemainAfterExit=yes
# 1800"
Environment="ALARM_SEC=1800" 
Environment="WAKEALARM=/sys/class/rtc/rtc0/wakealarm"

ExecStart=/usr/sbin/rtcwake --seconds $ALARM_SEC --auto --mode no
ExecStop=/bin/sh -c '\
ALARM=$(cat $WAKEALARM); \
NOW=$(date +%%s); \
if [ -z "$ALARM" ] || [ "$NOW" -ge "$ALARM" ]; then \

  if [ $(cat /sys/class/power_supply/AC/online) == '0' ]; then
    echo 'On battery'
    
    if [ $(cat /sys/class/power_supply/BAT0/capacity) -lt 50 ]; then      
      echo 'Battery less than 50%'
      # perform hibernation
      echo "suspend-sedation: Woke up - no alarm set. Hibernating..."; \
      systemctl hibernate; \
    else
      # put it to sleep once again
      systemctl suspend; \
    fi
    
  else
    # echo 'On AC power'
    systemctl suspend; \
  fi   
  
else \
  echo "suspend-sedation: Woke up before alarm - normal wakeup."; \
  /usr/sbin/rtcwake --auto --mode disable; \
fi \
'

[Install]
WantedBy=sleep.target

  
#+end_src

Move the script to the proper directory:
#+begin_src sh :dir /sudo:: :results output
  mv /tmp/suspend-sedation.service /etc/systemd/system/suspend-sedation.service
#+end_src



**** DEPRECATED Original version 
#+begin_src sh
# ## MB note: 
# ## file created in order to enable suspend-then-hibernate
# ## according to https://wiki.debian.org/SystemdSuspendSedation

# /etc/systemd/system/suspend-sedation.service
[Unit]
Description=Hibernate after suspend
Documentation=https://bbs.archlinux.org/viewtopic.php?pid=1420279#p1420279
Documentation=https://bbs.archlinux.org/viewtopic.php?pid=1574125#p1574125
Documentation=https://wiki.archlinux.org/index.php/Power_management
Documentation=http://forums.debian.net/viewtopic.php?f=5&t=129088
Documentation=https://wiki.debian.org/SystemdSuspendSedation
Conflicts=hibernate.target hybrid-sleep.target
Before=sleep.target
StopWhenUnneeded=true

[Service]
Type=oneshot
RemainAfterExit=yes
Environment="ALARM_SEC=1800"
Environment="WAKEALARM=/sys/class/rtc/rtc0/wakealarm"

ExecStart=/usr/sbin/rtcwake --seconds $ALARM_SEC --auto --mode no
ExecStop=/bin/sh -c '\
ALARM=$(cat $WAKEALARM); \
NOW=$(date +%%s); \
if [ -z "$ALARM" ] || [ "$NOW" -ge "$ALARM" ]; then \
  echo "suspend-sedation: Woke up - no alarm set. Hibernating..."; \
  systemctl hibernate; \
else \
  echo "suspend-sedation: Woke up before alarm - normal wakeup."; \
  /usr/sbin/rtcwake --auto --mode disable; \
fi \
'

[Install]
WantedBy=sleep.target
#+end_src

*** Enable it with

#+begin_src sh :dir /sudo:: :results output
  sudo systemctl enable suspend-sedation
#+end_src

#+RESULTS:




** Customizing =suspend-then-hibernate=


*** Tests for preparing version with hibernating only if battery is low and laptop is not on ac power



#+begin_src sh
    #!/bin/sh
    cat /sys/class/power_supply/AC/online
    cat /sys/class/power_supply/BAT0/capacity

  # if [ $(cat /sys/class/power_supply/AC/online) == '0' ]; then
  #     echo 'On battery'

  #     if [ $(cat /sys/class/power_supply/BAT0/capacity) -lt 50 ]; then      
  #       echo 'Battery less than 50%'
  #       # perform hibernation
  #     fi
  # else
  #     echo 'On AC power'
  # fi 
#+end_src

#+RESULTS:
|  0 |
| 72 |


* Fast access to files :noexport:
#+begin_src sh
  kate /etc/systemd/system/suspend-sedation.service
#+end_src

#+RESULTS:


* Secret links :noexport:
https://morfikov.github.io/post/przestrzen-wymiany-swap-tylko-na-potrzebny-hibernacji-w-debian-linux/


* COMMENT Local Variables

# Local Variables:
# eval: (setq org-latex-pdf-process
#  '("pdflatex -shell-escape -synctex=1 -interaction=nonstopmode -output-directory %o %f"
#    "pdflatex -shell-escape -synctex=1 -interaction=nonstopmode -output-directory %o %f"
#    "pdflatex -shell-escape -synctex=1 -interaction=nonstopmode -output-directory %o %f"))
# End:
 
