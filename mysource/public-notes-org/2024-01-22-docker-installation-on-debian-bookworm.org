#+TITLE: Docker installation on debian bookworm
#+DESCRIPTION: 
#+AUTHOR: cissic 
#+DATE: <2024-01-22 Mon>
#+TAGS: debian docker 
#+OPTIONS: -:nil

* TODO Docker installation on debian bookworm
:PROPERTIES:
:PRJ-DIR: ./2024-01-22-Docker-installation-on-debian-bookworm/
:END:

** Problem description
On debian bookworm, when running the command:
#+begin_src sh :results output
docker compose
#+end_src
I obtain:
#+begin_example
docker: 'compose' is not a docker command.
#+end_example

It seems that it's the middle of transition between docker compose version 1
and docker compose version 2.

https://itslinuxfoss.com/fix-docker-compose-command-not-found-error/


** Solution
#+begin_src sh
  sudo apt install docker-compose
#+end_src

Note that now you need to run docker with =sudo= to have it working
properly.
#+begin_example
   sudo docker compose up
#+end_example

Without =sudo= you'll obtain an error.


** DEPRECATED First approach (still errors)
#+begin_src sh
  DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
  mkdir -p $DOCKER_CONFIG/cli-plugins
#+end_src

#+begin_src sh
  curl -SL https://github.com/docker/compose/releases/download/v2.6.1/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
  chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
#+end_src


Now running the command 
#+begin_src sh
  docker compose version
#+end_src
returns the output
#+RESULTS:
: Docker Compose version v2.6.1


** TODO (???) Now 
- add =$DOCKER_CONFIG= to .bashrc ?? to make it working always for a user?
  

